language: rust
cache: cargo
before_install:
  - sudo add-apt-repository ppa:wireguard/wireguard -y
  - sudo add-apt-repository universe
  - sudo apt-get -qq update
  - sudo apt-get install -y libsqlite3-dev postgresql-client-11 postgresql-server-dev-11 iperf3 python3-pip bridge-utils wireguard linux-source linux-headers-$(uname -r) curl git libssl-dev pkg-config build-essential ipset
  - which diesel || cargo install diesel_cli --no-default-features --features sqlite
  - sudo cp $(which diesel) /usr/bin
  - command -v cross 1>/dev/null || cargo install cross

env:
  matrix:
    - TARGET="x86_64-unknown-linux-gnu"
    - TARGET="mips-unknown-linux-gnu"
    - TARGET="mipsel-unknown-linux-gnu"
    - TARGET="mips64-unknown-linux-gnuabi64"
    - TARGET="mips64el-unknown-linux-gnuabi64"
    - TARGET="aarch64-unknown-linux-gnu"

rust:
  - stable
  - beta
  - nightly

script:
  - cross build --target $TARGET --verbose --all
  - cross test --target $TARGET --verbose --all -- --test-threads=1

matrix:
  allow_failures:
    - rust: nightly
  fast_finish: true

  include:
    - rust: stable
      ? env
      ? before_install
      script:
        - rustup component add rustfmt-preview
        - cargo fmt --all -- --check
    - name: "Cross compile on MIPS"
      script: ./integration-tests/cross-build.sh
    - script: ./integration-tests/rita.sh
      env: INITIAL_POLL_INTERVAL=5 BACKOFF_FACTOR="1.5" VERBOSE=1
    - script: ./integration-tests/rita.sh
      env: REVISION_B=release REMOTE_A=.. REMOTE_B="https://github.com/althea-mesh/althea_rs.git" COMPAT_LAYOUT="inner_ring_old" INITIAL_POLL_INTERVAL=5 BACKOFF_FACTOR="1.5" VERBOSE=1
    - script: ./integration-tests/rita.sh
      env: REVISION_B=master REMOTE_A=.. REMOTE_B="https://github.com/althea-mesh/althea_rs.git" COMPAT_LAYOUT="inner_ring_old" INITIAL_POLL_INTERVAL=5 BACKOFF_FACTOR="1.5" VERBOSE=1
